language: cpp

git:
  depth: 10

notifications:
  email: false

addons:
  apt:
    sources:
     - ubuntu-toolchain-r-test
    packages:
     - coreutils
     - g++-4.8
     - gdb

# TODO: no core files on sudo:false machines until https://github.com/travis-ci/travis-ci/issues/3754 is resolved
sudo: false

matrix:
  include:
     # Linux
     - os: linux
       compiler: gcc
       env: NODE_VERSION="4" TARGET=Release
     - os: linux
       compiler: gcc
       env: NODE_VERSION="0.10" TARGET=Release
     - os: linux
       compiler: gcc
       env: NODE_VERSION="0.10" TARGET=Debug NPM_FLAGS="--debug"
     # OS X
     - os: osx
       compiler: clang
       env: NODE_VERSION="4" TARGET=Release
     - os: osx
       compiler: clang
       env: NODE_VERSION="0.10" TARGET=Release
     # Coverage
     - os: osx
       compiler: clang
       env: NODE_VERSION="0.10" COVERAGE=true TARGET=Debug NPM_FLAGS="--debug"

env:
  global:
   - JOBS: "3"
   - OSRM_RELEASE: "c8557cf28f51fa0935a236c939c0b32c2063bf49"
   - secure: KitzGZjoDblX/3heajcvssGz0JnJ/k02dr2tu03ksUV+6MogC3RSQudqyKY57+f8VyZrcllN/UOlJ0Q/3iG38Oz8DljC+7RZxtkVmE1SFBoOezKCdhcvWM12G3uqPs7hhrRxuUgIh0C//YXEkulUrqa2H1Aj2xeen4E3FAqEoy0=
   - secure: WLGmxl6VTVWhXGm6X83GYNYzPNsvTD+9usJOKM5YBLAdG7cnOBQBNiCCUKc9OZMMZVUr3ec2/iigakH5Y8Yc+U6AlWKzlORyqWLuk4nFuoedu62x6ocQkTkuOc7mHiYhKd21xTGMYauaZRS6kugv4xkpGES2UjI2T8cjZ+LN2jU=

before_install:
- scripts/validate_tag.sh
- export COVERAGE=${COVERAGE:-false}
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    export CXX="g++-4.8";
    export CC="gcc-4.8";
    export PYTHONPATH=$(pwd)/mason_packages/.link/lib/python2.7/site-packages;
  elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    sudo sysctl -w kern.sysv.shmmax=4294967296
    sudo sysctl -w kern.sysv.shmall=1048576
    sudo sysctl -w kern.sysv.shmseg=128
    export PYTHONPATH=$(pwd)/mason_packages/.link/lib/python/site-packages;
    brew update && brew install md5sha1sum;
  fi
# Mac OS X does not have nvm installed
- source ./scripts/install_node.sh ${NODE_VERSION}

install:
- source ./bootstrap.sh
- if [[ ${COVERAGE} == true ]]; then
    PYTHONUSERBASE=$(pwd)/mason_packages/.link pip install --user cpp-coveralls;
    export LDFLAGS="--coverage";
    export CXXFLAGS="--coverage";
  fi;
- npm install --build-from-source ${NPM_FLAGS} --clang=1;

before_script:
- ulimit -c unlimited -S

script:
- RESULT=0
- make test || RESULT=$?
- for i in $(find ./ -maxdepth 1 -name 'core*' -print); do gdb $(which node) $i -ex "thread apply all bt" -ex "set pagination 0" -batch; done;
- if [[ ${RESULT} != 0 ]]; then exit $RESULT; fi
- if [[ ${COVERAGE} == true ]]; then
    ./mason_packages/.link/bin/cpp-coveralls --exclude node_modules --exclude mason_packages --exclude tests --build-root build --gcov-options '\-lp' --exclude doc --exclude build/Release/obj/gen;
  else
    ./scripts/publish.sh;
  fi;
